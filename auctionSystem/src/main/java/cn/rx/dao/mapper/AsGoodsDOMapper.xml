<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rx.dao.mapper.AsGoodsDOMapper">
  <resultMap id="BaseResultMap" type="cn.rx.dao.model.AsGoodsDO">
    <id column="goods_goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_goods_type" jdbcType="INTEGER" property="goodsType" />
    <result column="goods_goods_pic" jdbcType="VARCHAR" property="goodsPic" />
    <result column="goods_goods_detail_pic" jdbcType="VARCHAR" property="goodsDetailPic" />
    <result column="goods_goods_start_time" jdbcType="DATE" property="goodsStartTime" />
    <result column="goods_goods_end_time" jdbcType="DATE" property="goodsEndTime" />
    <result column="goods_goods_auction_times" jdbcType="INTEGER" property="goodsAuctionTimes" />
    <result column="goods_goods_start_price" jdbcType="DOUBLE" property="goodsStartPrice" />
    <result column="goods_goods_current_price" jdbcType="DOUBLE" property="goodsCurrentPrice" />
    <result column="goods_goods_state" jdbcType="INTEGER" property="goodsState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="resultColumns != null">
      <foreach collection="resultColumns.columns" item="item" separator=",">
        goods.${item} as goods_${item}
      </foreach>
    </if>
    <if test="resultColumns == null">
      goods.goods_id as goods_goods_id, goods.goods_name as goods_goods_name, goods.goods_type as goods_goods_type, 
      goods.goods_pic as goods_goods_pic, goods.goods_detail_pic as goods_goods_detail_pic, 
      goods.goods_start_time as goods_goods_start_time, goods.goods_end_time as goods_goods_end_time, 
      goods.goods_auction_times as goods_goods_auction_times, goods.goods_start_price as goods_goods_start_price, 
      goods.goods_current_price as goods_goods_current_price, goods.goods_state as goods_goods_state
    </if>
  </sql>
  <select id="selectByExample" parameterType="cn.rx.dao.model.AsGoodsDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from as_goods goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from as_goods goods
    where goods.goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from as_goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.rx.dao.model.AsGoodsDOExample">
    delete goods from as_goods goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.rx.dao.model.AsGoodsDO">
    <selectKey keyProperty="goodsId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into as_goods (goods_name, goods_type, goods_pic, 
      goods_detail_pic, goods_start_time, goods_end_time, 
      goods_auction_times, goods_start_price, goods_current_price, 
      goods_state)
    values (#{goodsName,jdbcType=VARCHAR}, #{goodsType,jdbcType=INTEGER}, #{goodsPic,jdbcType=VARCHAR}, 
      #{goodsDetailPic,jdbcType=VARCHAR}, #{goodsStartTime,jdbcType=DATE}, #{goodsEndTime,jdbcType=DATE}, 
      #{goodsAuctionTimes,jdbcType=INTEGER}, #{goodsStartPrice,jdbcType=DOUBLE}, #{goodsCurrentPrice,jdbcType=DOUBLE}, 
      #{goodsState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.rx.dao.model.AsGoodsDO">
    <selectKey keyProperty="goodsId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into as_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="goodsPic != null">
        goods_pic,
      </if>
      <if test="goodsDetailPic != null">
        goods_detail_pic,
      </if>
      <if test="goodsStartTime != null">
        goods_start_time,
      </if>
      <if test="goodsEndTime != null">
        goods_end_time,
      </if>
      <if test="goodsAuctionTimes != null">
        goods_auction_times,
      </if>
      <if test="goodsStartPrice != null">
        goods_start_price,
      </if>
      <if test="goodsCurrentPrice != null">
        goods_current_price,
      </if>
      <if test="goodsState != null">
        goods_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="goodsPic != null">
        #{goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetailPic != null">
        #{goodsDetailPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsStartTime != null">
        #{goodsStartTime,jdbcType=DATE},
      </if>
      <if test="goodsEndTime != null">
        #{goodsEndTime,jdbcType=DATE},
      </if>
      <if test="goodsAuctionTimes != null">
        #{goodsAuctionTimes,jdbcType=INTEGER},
      </if>
      <if test="goodsStartPrice != null">
        #{goodsStartPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsCurrentPrice != null">
        #{goodsCurrentPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsState != null">
        #{goodsState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.rx.dao.model.AsGoodsDOExample" resultType="java.lang.Long">
    select count(*) from as_goods goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update as_goods goods
    <set>
      <if test="record.goodsId != null">
        goods.goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods.goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsType != null">
        goods.goods_type = #{record.goodsType,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPic != null">
        goods.goods_pic = #{record.goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDetailPic != null">
        goods.goods_detail_pic = #{record.goodsDetailPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsStartTime != null">
        goods.goods_start_time = #{record.goodsStartTime,jdbcType=DATE},
      </if>
      <if test="record.goodsEndTime != null">
        goods.goods_end_time = #{record.goodsEndTime,jdbcType=DATE},
      </if>
      <if test="record.goodsAuctionTimes != null">
        goods.goods_auction_times = #{record.goodsAuctionTimes,jdbcType=INTEGER},
      </if>
      <if test="record.goodsStartPrice != null">
        goods.goods_start_price = #{record.goodsStartPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsCurrentPrice != null">
        goods.goods_current_price = #{record.goodsCurrentPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsState != null">
        goods.goods_state = #{record.goodsState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update as_goods goods
    set goods.goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods.goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods.goods_type = #{record.goodsType,jdbcType=INTEGER},
      goods.goods_pic = #{record.goodsPic,jdbcType=VARCHAR},
      goods.goods_detail_pic = #{record.goodsDetailPic,jdbcType=VARCHAR},
      goods.goods_start_time = #{record.goodsStartTime,jdbcType=DATE},
      goods.goods_end_time = #{record.goodsEndTime,jdbcType=DATE},
      goods.goods_auction_times = #{record.goodsAuctionTimes,jdbcType=INTEGER},
      goods.goods_start_price = #{record.goodsStartPrice,jdbcType=DOUBLE},
      goods.goods_current_price = #{record.goodsCurrentPrice,jdbcType=DOUBLE},
      goods.goods_state = #{record.goodsState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rx.dao.model.AsGoodsDO">
    update as_goods
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="goodsPic != null">
        goods_pic = #{goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetailPic != null">
        goods_detail_pic = #{goodsDetailPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsStartTime != null">
        goods_start_time = #{goodsStartTime,jdbcType=DATE},
      </if>
      <if test="goodsEndTime != null">
        goods_end_time = #{goodsEndTime,jdbcType=DATE},
      </if>
      <if test="goodsAuctionTimes != null">
        goods_auction_times = #{goodsAuctionTimes,jdbcType=INTEGER},
      </if>
      <if test="goodsStartPrice != null">
        goods_start_price = #{goodsStartPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsCurrentPrice != null">
        goods_current_price = #{goodsCurrentPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsState != null">
        goods_state = #{goodsState,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rx.dao.model.AsGoodsDO">
    update as_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_type = #{goodsType,jdbcType=INTEGER},
      goods_pic = #{goodsPic,jdbcType=VARCHAR},
      goods_detail_pic = #{goodsDetailPic,jdbcType=VARCHAR},
      goods_start_time = #{goodsStartTime,jdbcType=DATE},
      goods_end_time = #{goodsEndTime,jdbcType=DATE},
      goods_auction_times = #{goodsAuctionTimes,jdbcType=INTEGER},
      goods_start_price = #{goodsStartPrice,jdbcType=DOUBLE},
      goods_current_price = #{goodsCurrentPrice,jdbcType=DOUBLE},
      goods_state = #{goodsState,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <sql id="All_Column_List">
    goods.goods_id as goods_goods_id, goods.goods_name as goods_goods_name, goods.goods_type as goods_goods_type, 
    goods.goods_pic as goods_goods_pic, goods.goods_detail_pic as goods_goods_detail_pic, 
    goods.goods_start_time as goods_goods_start_time, goods.goods_end_time as goods_goods_end_time, 
    goods.goods_auction_times as goods_goods_auction_times, goods.goods_start_price as goods_goods_start_price, 
    goods.goods_current_price as goods_goods_current_price, goods.goods_state as goods_goods_state
  </sql>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>